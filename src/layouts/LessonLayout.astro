---
import type { CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import Term from '~/components/Term.astro';
import Callout from '~/components/Callout';
import Flow from '~/components/Flow';
import Quiz from '~/components/Quiz.astro';
import { ProgressRing } from '~/components/Progress';

interface LessonNav {
  title: string;
  url: string;
}

interface Props {
  entry: CollectionEntry<'classroom'>;
  moduleId: string;
  moduleTitle: string;
  position: number;
  totalLessons: number;
  prevLesson?: LessonNav;
  nextLesson?: LessonNav;
}

const {
  entry,
  moduleId,
  moduleTitle,
  position,
  totalLessons,
  prevLesson,
  nextLesson
} = Astro.props as Props;

const { Content, headings } = await entry.render();
const lessonTitle = entry.data.title;
const description = entry.data.description;
const progressValue = Math.round((position / totalLessons) * 100);
const estimatedTime = entry.data.estimatedTime;
const breadcrumbItems = [
  { label: 'Home', href: '/how-to-law/' },
  { label: 'Classroom', href: '/how-to-law/classroom/' },
  { label: moduleTitle, href: `/how-to-law/classroom/${moduleId}/` },
  { label: lessonTitle, href: Astro.url.pathname }
];
---
<BaseLayout title={`${lessonTitle} · ${moduleTitle}`} description={description}>
  {nextLesson ? <link slot="head" rel="prefetch" href={nextLesson.url} /> : null}
  <article class="bg-background">
    <div class="mx-auto max-w-5xl px-4 py-12 sm:px-6 lg:px-8">
      <nav aria-label="Breadcrumb" class="text-sm text-muted">
        <ol class="flex flex-wrap items-center gap-2">
          {breadcrumbItems.map((crumb, index) => (
            <li class="flex items-center gap-2">
              <a href={crumb.href} class="hover:text-accent focus:outline-none focus-visible:ring-2 focus-visible:ring-accent">
                {crumb.label}
              </a>
              {index < breadcrumbItems.length - 1 ? <span aria-hidden="true">/</span> : null}
            </li>
          ))}
        </ol>
      </nav>
      <header class="mt-6 flex flex-col gap-6 lg:flex-row lg:items-start lg:justify-between">
        <div class="max-w-3xl space-y-4">
          <p class="text-xs uppercase tracking-wide text-muted">{moduleTitle}</p>
          <h1 class="text-3xl font-semibold tracking-tight text-foreground sm:text-4xl">{lessonTitle}</h1>
          <p class="text-lg text-foreground/80">{description}</p>
          {entry.data.tags?.length ? (
            <div class="flex flex-wrap gap-2">
              {entry.data.tags.map((tag) => (
                <span class="rounded-full bg-accent/10 px-3 py-1 text-xs font-semibold uppercase tracking-wide text-accent">
                  {tag}
                </span>
              ))}
            </div>
          ) : null}
        </div>
        <aside class="flex items-center gap-6 rounded-2xl border border-border bg-card px-6 py-5 shadow-subtle">
          <ProgressRing value={progressValue} label={`Lesson ${position} of ${totalLessons}`} />
          <div class="space-y-2 text-sm">
            <p class="font-semibold text-foreground">Lesson {position} of {totalLessons}</p>
            <p class="text-muted">Estimated time: {estimatedTime}</p>
          </div>
        </aside>
      </header>
      <section class="mt-10 rounded-2xl border border-border bg-card p-6 shadow-subtle">
        <h2 class="text-lg font-semibold text-foreground">Objectives</h2>
        <ul class="mt-4 list-disc space-y-2 pl-6 text-sm text-foreground/90">
          {entry.data.objectives.map((objective) => (
            <li>{objective}</li>
          ))}
        </ul>
      </section>
      <div class="prose prose-slate mt-10 max-w-none dark:prose-invert">
        <Content components={{ Term, Callout, Flow, Quiz }} headings={headings} />
      </div>
      <nav class="mt-12 flex flex-col gap-4 border-t border-border/60 pt-6 text-sm font-semibold text-accent sm:flex-row sm:justify-between">
        {prevLesson ? (
          <a href={prevLesson.url} class="flex items-center gap-2 hover:underline focus:outline-none focus-visible:ring-2 focus-visible:ring-accent">
            ← {prevLesson.title}
          </a>
        ) : <span />}
        {nextLesson ? (
          <a href={nextLesson.url} class="flex items-center gap-2 justify-end hover:underline focus:outline-none focus-visible:ring-2 focus-visible:ring-accent">
            Next: {nextLesson.title} →
          </a>
        ) : null}
      </nav>
    </div>
  </article>
</BaseLayout>
