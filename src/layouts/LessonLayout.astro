---
import BaseLayout from './BaseLayout.astro';
import Quiz from '../components/Quiz';
import { ProgressRing } from '../components/Progress';
import LessonCompletion from '../components/LessonCompletion';

const { frontmatter, moduleId, prev, next, slug } = Astro.props as {
  frontmatter: Record<string, any>;
  moduleId: string;
  prev?: { title: string; url: string };
  next?: { title: string; url: string };
  slug: string;
};

const lessonSlug = (frontmatter.slug as string | undefined) ?? slug;
const lessonId = `${moduleId}-${lessonSlug}`;
---
<BaseLayout title={`${frontmatter.title} · How to Law`} description={frontmatter.summary ?? frontmatter.description ?? ''}>
  {next?.url && (
    <Fragment slot="head">
      <link rel="prefetch" href={next.url} />
    </Fragment>
  )}
  <div class="mx-auto flex max-w-7xl flex-col gap-10 px-4 py-12 sm:px-6 lg:flex-row lg:px-8">
    <article class="flex-1">
      <header class="flex flex-col gap-6 rounded-3xl border border-muted/40 bg-card/80 p-8 shadow-subtle">
        <div class="flex items-center justify-between gap-6">
          <div>
            <p class="text-sm uppercase tracking-wide text-muted">Module · {frontmatter.moduleLabel ?? frontmatter.module}</p>
            <h1 class="mt-2 text-3xl font-semibold text-foreground">{frontmatter.title}</h1>
            <p class="mt-3 text-base text-muted">{frontmatter.summary ?? ''}</p>
          </div>
          <ProgressRing client:load lessonId={lessonId} />
        </div>
        <div class="flex flex-wrap items-center gap-4 text-sm text-muted">
          <span class="rounded-full border border-muted/40 px-3 py-1">Level: {frontmatter.level}</span>
          <span class="rounded-full border border-muted/40 px-3 py-1">Est. {frontmatter.est_minutes} min</span>
          {frontmatter.tags?.map((tag: string) => (
            <span class="rounded-full border border-muted/40 px-3 py-1">
              #{tag}
            </span>
          ))}
        </div>
        <LessonCompletion client:load lessonId={lessonId} />
      </header>
      <div class="prose prose-slate mx-auto mt-12 max-w-none dark:prose-invert">
        <slot />
      </div>
      {frontmatter.quiz && (
        <Quiz client:load items={frontmatter.quiz} lessonId={lessonId} />
      )}
      <nav class="mt-12 flex flex-col gap-4 border-t border-muted/30 pt-6 sm:flex-row sm:items-center sm:justify-between">
        {prev ? (
          <a href={prev.url} class="text-sm font-semibold text-accent hover:underline">
            ← {prev.title}
          </a>
        ) : (
          <span />
        )}
        {next ? (
          <a href={next.url} class="text-sm font-semibold text-accent hover:underline">
            {next.title} →
          </a>
        ) : (
          <span />
        )}
      </nav>
    </article>
    <aside class="lg:w-80 lg:flex-shrink-0">
      <div class="sticky top-24 space-y-6 rounded-3xl border border-muted/40 bg-card/70 p-6 shadow-subtle">
        <h2 class="text-sm font-semibold uppercase tracking-wide text-muted">Objectives</h2>
        <ul class="space-y-3">
          {frontmatter.objectives?.map((item: string) => (
            <li class="flex items-start gap-3 text-sm text-foreground/80">
              <span class="mt-1 inline-flex h-2 w-2 flex-shrink-0 rounded-full bg-accent" aria-hidden />
              <span>{item}</span>
            </li>
          ))}
        </ul>
        {frontmatter.prereqs?.length ? (
          <div>
            <h3 class="mt-6 text-sm font-semibold uppercase tracking-wide text-muted">Prerequisites</h3>
            <ul class="mt-2 list-disc space-y-1 pl-5 text-sm text-muted">
              {frontmatter.prereqs.map((item: string) => (
                <li>{item}</li>
              ))}
            </ul>
          </div>
        ) : null}
        <div class="mt-6 text-xs text-muted">
          Lesson ID: {lessonId}
        </div>
      </div>
    </aside>
  </div>
</BaseLayout>
