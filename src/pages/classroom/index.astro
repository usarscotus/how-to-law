---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import ModuleProgress from '../../components/ModuleProgress';
import ModuleContinue from '../../components/ModuleContinue';
import { formatMinutes } from '../../lib/utils';

const lessons = await getCollection('classroom');
const getLessonSlug = (entry: typeof lessons[number]) => (entry.data as Record<string, any>).slug ?? entry.slug;
const grouped = lessons.reduce((acc, lesson) => {
  const moduleId = lesson.data.module;
  if (!acc[moduleId]) {
    acc[moduleId] = {
      id: moduleId,
      title: lesson.data.moduleLabel ?? moduleId,
      description:
        moduleId === 'foundations'
          ? 'Core doctrine you need for any modern US law storyline.'
          : 'Procedural beats for criminal arcs—plus RP variants.',
      lessons: [] as typeof lessons,
      totalMinutes: 0
    };
  }
  acc[moduleId].lessons.push(lesson);
  acc[moduleId].totalMinutes += lesson.data.est_minutes;
  return acc;
}, {} as Record<string, { id: string; title: string; description: string; lessons: typeof lessons; totalMinutes: number }>);
---
<BaseLayout title="Classroom" description="Structured lessons with RP-ready legal doctrine.">
  <div class="mx-auto max-w-6xl px-4 py-12 sm:px-6 lg:px-8">
    <div class="rounded-3xl border border-muted/30 bg-card/80 p-8 shadow-subtle">
      <h1 class="text-3xl font-semibold text-foreground">Classroom</h1>
      <p class="mt-2 text-muted">Pick a module, track your progress, and unlock RP callouts along the way.</p>
    </div>
    <div class="mt-12 grid gap-8 md:grid-cols-2">
      {Object.values(grouped).map((module) => {
        const lessonRefs = module.lessons
          .slice()
          .sort((a, b) => a.slug.localeCompare(b.slug))
          .map((lesson) => {
            const lessonSlug = getLessonSlug(lesson);
            return {
              id: `${lesson.data.module}-${lessonSlug}`,
              title: lesson.data.title,
              url: `/how-to-law/classroom/${lesson.data.module}/${lessonSlug}/`
            };
          });
        return (
          <article class="flex flex-col gap-4 rounded-3xl border border-muted/30 bg-card/70 p-6 shadow-subtle">
            <div class="flex items-start justify-between gap-4">
              <div>
                <h2 class="text-xl font-semibold text-foreground">{module.title}</h2>
                <p class="mt-1 text-sm text-muted">{module.description}</p>
              </div>
              <ModuleProgress client:load lessonIds={lessonRefs.map((lesson) => lesson.id)} />
            </div>
            <ul class="space-y-3 text-sm text-muted">
              {lessonRefs.map((lesson, index) => (
                <li class="flex items-center justify-between gap-3">
                  <span class="text-foreground/80">{String(index + 1).padStart(2, '0')} · {lesson.title}</span>
                  <a href={lesson.url} class="text-xs font-semibold text-accent hover:underline">
                    View lesson
                  </a>
                </li>
              ))}
            </ul>
            <div class="mt-auto flex items-center justify-between text-sm text-muted">
              <span>{lessonRefs.length} lessons · {formatMinutes(module.totalMinutes)}</span>
              <ModuleContinue client:load lessons={lessonRefs} />
            </div>
          </article>
        );
      })}
    </div>
  </div>
</BaseLayout>
